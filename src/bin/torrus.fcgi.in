#!@PERL@ -w
#  Copyright (C) 2010  Stanislav Sinyagin
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

# $Id$
# Stanislav Sinyagin <ssinyagin@yahoo.com>

# FastCGI handler
# Can be used as alternative to mod_perl in Apache
# Can also be used with lighttpd


BEGIN { require '@torrus_config_pl@'; }

use strict;
use CGI::Fast;
use Torrus::Log;
use Torrus::CGI;


if( $Torrus::Renderer::globalDebug )
{
    &Torrus::Log::setLevel('debug');
}


# The FCGI handler process exits after a while and lets FCGI re-spawn
# the process.  This way there's less chance of DB becoming corrupted
# The limits are randomized, so that multiple FCGI processes don't stop
# at the same time

my $max_req_count = $Torrus::FCGI::maxRequests +
    rand($Torrus::FCGI::maxRequestsRandomFactor);

my $max_time = time() + $Torrus::FCGI::maxLifetime +
    rand($Torrus::FCGI::maxLifetimeRandomFactor);

my $req_count = 0;
while( my $q = CGI::Fast->new() )
{
    Torrus::CGI->process($q);
    $req_count++;

    if( $req_count > $max_req_count or
        time() > $max_time )
    {
        exit(0);
    }
}


# Local Variables:
# mode: perl
# indent-tabs-mode: nil
# perl-indent-level: 4
# End:
